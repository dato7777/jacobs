{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { addProduct, getProducts, deleteProduct, updateProduct } from './ProductAPI ';\nimport jwt_decode from \"jwt-decode\"; // state-data (initial data)\n\nconst initialState = {\n  products: []\n};\nexport const getProductsAsync = createAsyncThunk('products/getproducts', async cid => {\n  const response = await getProducts(cid);\n  return response.data;\n});\nexport const deleteProductAsync = createAsyncThunk('products/deleteProduct', async data => {\n  // console.log(data.prodID)\n  const response = await deleteProduct(data.prodID, data.token);\n  return response.data;\n});\nexport const updateProductAsync = createAsyncThunk('products/updateProduct', async data => {\n  // console.log(data.prodID)\n  const response = await updateProduct(data.prodID, data.newPrice, data.token);\n  return response.data;\n});\nexport const addProductAsync = createAsyncThunk('products/addProduct', async action => {\n  console.log(first);\n  const response = await addProduct(action);\n  return response.data;\n}); // export const addProductAsync = createAsyncThunk(\n//   'products/addProduct',\n//   async (data) => {\n//     // console.log(data.token)\n//     // console.log(data.productDesc,data.productPrice,data.productCatid)\n//     const response = await addProduct(data.token, data.productDesc, data.productPrice, data.productCatID, data.myImage);\n//     return response.data;\n//   }\n// );\n\nexport const ProductsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {},\n  // happens when async is done - callback\n  // async (3)\n  extraReducers: builder => {\n    builder.addCase(addProductAsync.fulfilled, (state, action) => {\n      state.products.push(action.payload);\n    }).addCase(deleteProductAsync.fulfilled, (state, action) => {\n      state.products = state.products.filter(x => x.id !== action.payload);\n    }).addCase(updateProductAsync.fulfilled, (state, action) => {\n      state.products = action.payload;\n    }).addCase(getProductsAsync.fulfilled, (state, action) => {\n      state.products = action.payload;\n    });\n  }\n}); // export of sync methods only\n// export const { signOut } = ProductSlice.actions;\n// export of any part of the state\n\nexport const selectProducts = state => state.products.products;\nexport default ProductsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","addProduct","getProducts","deleteProduct","updateProduct","jwt_decode","initialState","products","getProductsAsync","cid","response","data","deleteProductAsync","prodID","token","updateProductAsync","newPrice","addProductAsync","action","console","log","first","ProductsSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","push","payload","filter","x","id","selectProducts","reducer"],"sources":["/Users/dato/My Python Stuff/lastdayproject2/Jacobs-Dreams/Front/my-app/src/app/pages/ProductsSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { addProduct, getProducts, deleteProduct,updateProduct } from './ProductAPI ';\nimport jwt_decode from \"jwt-decode\";\n\n// state-data (initial data)\nconst initialState = {\n  products: []\n};\n\nexport const getProductsAsync = createAsyncThunk(\n  'products/getproducts',\n  async (cid) => {\n    const response = await getProducts(cid);\n    \n    return response.data;\n  }\n);\nexport const deleteProductAsync = createAsyncThunk(\n  'products/deleteProduct',\n  async (data) => {\n    // console.log(data.prodID)\n    const response = await deleteProduct(data.prodID,data.token);\n    return response.data;\n  }\n);\nexport const updateProductAsync = createAsyncThunk(\n  'products/updateProduct',\n  async (data) => {\n    // console.log(data.prodID)\n    const response = await updateProduct(data.prodID,data.newPrice,data.token);\n    return response.data;\n  }\n);\n\nexport const addProductAsync = createAsyncThunk(\n  'products/addProduct',\n    async (action) => {\n      console.log(first)\n      const response = await addProduct(action);\n      return response.data;\n  }\n);\n// export const addProductAsync = createAsyncThunk(\n//   'products/addProduct',\n//   async (data) => {\n//     // console.log(data.token)\n//     // console.log(data.productDesc,data.productPrice,data.productCatid)\n//     const response = await addProduct(data.token, data.productDesc, data.productPrice, data.productCatID, data.myImage);\n//     return response.data;\n//   }\n// );\n\nexport const ProductsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n  },\n  // happens when async is done - callback\n  // async (3)\n  extraReducers: (builder) => {\n    builder\n      .addCase(addProductAsync.fulfilled, (state, action) => {\n        state.products.push(action.payload)\n        \n      })\n      .addCase(deleteProductAsync.fulfilled, (state, action) => {\n        \n        state.products = state.products.filter((x) => x.id !== action.payload);\n      })\n      .addCase(updateProductAsync.fulfilled, (state, action) => {\n        state.products = action.payload\n        \n      })\n      .addCase(getProductsAsync.fulfilled, (state, action) => {\n        state.products = action.payload\n        \n        \n      });\n      \n  },\n});\n// export of sync methods only\n// export const { signOut } = ProductSlice.actions;\n// export of any part of the state\nexport const selectProducts = (state) => state.products.products;\n\nexport default ProductsSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,aAAlC,EAAgDC,aAAhD,QAAqE,eAArE;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE;AADS,CAArB;AAIA,OAAO,MAAMC,gBAAgB,GAAGT,gBAAgB,CAC9C,sBAD8C,EAE9C,MAAOU,GAAP,IAAe;EACb,MAAMC,QAAQ,GAAG,MAAMR,WAAW,CAACO,GAAD,CAAlC;EAEA,OAAOC,QAAQ,CAACC,IAAhB;AACD,CAN6C,CAAzC;AAQP,OAAO,MAAMC,kBAAkB,GAAGb,gBAAgB,CAChD,wBADgD,EAEhD,MAAOY,IAAP,IAAgB;EACd;EACA,MAAMD,QAAQ,GAAG,MAAMP,aAAa,CAACQ,IAAI,CAACE,MAAN,EAAaF,IAAI,CAACG,KAAlB,CAApC;EACA,OAAOJ,QAAQ,CAACC,IAAhB;AACD,CAN+C,CAA3C;AAQP,OAAO,MAAMI,kBAAkB,GAAGhB,gBAAgB,CAChD,wBADgD,EAEhD,MAAOY,IAAP,IAAgB;EACd;EACA,MAAMD,QAAQ,GAAG,MAAMN,aAAa,CAACO,IAAI,CAACE,MAAN,EAAaF,IAAI,CAACK,QAAlB,EAA2BL,IAAI,CAACG,KAAhC,CAApC;EACA,OAAOJ,QAAQ,CAACC,IAAhB;AACD,CAN+C,CAA3C;AASP,OAAO,MAAMM,eAAe,GAAGlB,gBAAgB,CAC7C,qBAD6C,EAE3C,MAAOmB,MAAP,IAAkB;EAChBC,OAAO,CAACC,GAAR,CAAYC,KAAZ;EACA,MAAMX,QAAQ,GAAG,MAAMT,UAAU,CAACiB,MAAD,CAAjC;EACA,OAAOR,QAAQ,CAACC,IAAhB;AACH,CAN4C,CAAxC,C,CAQP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMW,aAAa,GAAGtB,WAAW,CAAC;EACvCuB,IAAI,EAAE,UADiC;EAEvCjB,YAFuC;EAGvCkB,QAAQ,EAAE,EAH6B;EAKvC;EACA;EACAC,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CACJC,OADH,CACWV,eAAe,CAACW,SAD3B,EACsC,CAACC,KAAD,EAAQX,MAAR,KAAmB;MACrDW,KAAK,CAACtB,QAAN,CAAeuB,IAAf,CAAoBZ,MAAM,CAACa,OAA3B;IAED,CAJH,EAKGJ,OALH,CAKWf,kBAAkB,CAACgB,SAL9B,EAKyC,CAACC,KAAD,EAAQX,MAAR,KAAmB;MAExDW,KAAK,CAACtB,QAAN,GAAiBsB,KAAK,CAACtB,QAAN,CAAeyB,MAAf,CAAuBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAAShB,MAAM,CAACa,OAA7C,CAAjB;IACD,CARH,EASGJ,OATH,CASWZ,kBAAkB,CAACa,SAT9B,EASyC,CAACC,KAAD,EAAQX,MAAR,KAAmB;MACxDW,KAAK,CAACtB,QAAN,GAAiBW,MAAM,CAACa,OAAxB;IAED,CAZH,EAaGJ,OAbH,CAaWnB,gBAAgB,CAACoB,SAb5B,EAauC,CAACC,KAAD,EAAQX,MAAR,KAAmB;MACtDW,KAAK,CAACtB,QAAN,GAAiBW,MAAM,CAACa,OAAxB;IAGD,CAjBH;EAmBD;AA3BsC,CAAD,CAAjC,C,CA6BP;AACA;AACA;;AACA,OAAO,MAAMI,cAAc,GAAIN,KAAD,IAAWA,KAAK,CAACtB,QAAN,CAAeA,QAAjD;AAEP,eAAee,aAAa,CAACc,OAA7B"},"metadata":{},"sourceType":"module"}