{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { signIn, signUp, signUpClient } from './LoginAPI';\nimport jwt_decode from \"jwt-decode\"; // state-data (initial data)\n\nconst initialState = localStorage.getItem('token') === null ? {\n  userName: \"\",\n  email: \"\",\n  userFirstName: \"\",\n  userLastName: \"\",\n  token: \"\",\n  logged: false,\n  staff: false\n} : jwt_decode(localStorage.getItem('token')).staff === true ? {\n  userName: jwt_decode(localStorage.getItem('token')).username,\n  email: jwt_decode(localStorage.getItem('token')).email,\n  userFirstName: jwt_decode(localStorage.getItem('token')).firstName,\n  userLastName: jwt_decode(localStorage.getItem('token')).lastName,\n  staff: true,\n  token: localStorage.getItem('token'),\n  logged: true\n} : {\n  userName: jwt_decode(localStorage.getItem('token')).username,\n  email: jwt_decode(localStorage.getItem('token')).email,\n  userFirstName: jwt_decode(localStorage.getItem('token')).firstName,\n  userLastName: jwt_decode(localStorage.getItem('token')).lastName,\n  staff: false,\n  token: localStorage.getItem('token'),\n  logged: true\n}; // simple async method(component can call it)\n// async (1)\n\nexport const signInAsync = createAsyncThunk('login/signIn', async action => {\n  const response = await signIn(action); // console.log(state.token)\n\n  return response.data;\n});\nexport const signUpAsync = createAsyncThunk('login/signUp', async cred => {\n  // console.log(cred)\n  const response = await signUp(cred);\n  return response.data;\n});\nexport const signUpClientAsync = createAsyncThunk('login/signUpClient', async cred => {\n  // console.log(cred)\n  const response = await signUpClient(cred);\n  return response.data;\n});\nexport const LoginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    signOut: state => {\n      state.token = \"\";\n      state.logged = false;\n      state.staff = false;\n      state.userName = \"\";\n      state.email = \"\";\n      localStorage.removeItem('token');\n    }\n  },\n  //   useEffect(() => {\n  //     const storedToken = localStorage.getItem(\"token\");\n  //     if (storedToken !== null) {\n  //         setMyToken(storedToken)\n  //     };\n  // }, []);\n  // happens when async is done - callback\n  // async (3)\n  extraReducers: builder => {\n    builder.addCase(signInAsync.fulfilled, (state, action) => {\n      if (action.payload.access) {\n        state.token = action.payload.access;\n        state.logged = true;\n        state.userName = jwt_decode(action.payload.access).username;\n        state.userFirstName = jwt_decode(action.payload.access).firstName;\n        state.userLastName = jwt_decode(action.payload.access).lastName;\n        state.email = jwt_decode(action.payload.access).email;\n        state.staff = jwt_decode(action.payload.access).staff;\n        localStorage.setItem('token', JSON.stringify(state.token));\n      }\n    }).addCase(signUpAsync.fulfilled, (state, action) => {}).addCase(signUpClientAsync.fulfilled, (state, action) => {});\n  }\n}); // export of sync methods only\n\nexport const {\n  signOut\n} = LoginSlice.actions; // export of any part of the state\n\nexport const selectLogged = state => state.login.logged;\nexport const selectEmail = state => state.login.email;\nexport const selectUserName = state => state.login.userName;\nexport const selectUserFirstName = state => state.login.userFirstName;\nexport const selectUserLastName = state => state.login.userLastName;\nexport const selectToken = state => state.login.token;\nexport const selectStaff = state => state.login.staff; // export reducer to the application\n\nexport default LoginSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","signIn","signUp","signUpClient","jwt_decode","initialState","localStorage","getItem","userName","email","userFirstName","userLastName","token","logged","staff","username","firstName","lastName","signInAsync","action","response","data","signUpAsync","cred","signUpClientAsync","LoginSlice","name","reducers","signOut","state","removeItem","extraReducers","builder","addCase","fulfilled","payload","access","setItem","JSON","stringify","actions","selectLogged","login","selectEmail","selectUserName","selectUserFirstName","selectUserLastName","selectToken","selectStaff","reducer"],"sources":["/Users/dato/My Python Stuff/lastdayproject2/Jacobs-Dreams/Front/my-app/src/app/pages/LoginSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { signIn, signUp, signUpClient } from './LoginAPI';\nimport jwt_decode from \"jwt-decode\";\n\n\n// state-data (initial data)\n\nconst initialState = localStorage.getItem('token') === null ? {\n  userName: \"\",\n  email: \"\",\n  userFirstName:\"\",\n  userLastName:\"\",\n  token: \"\",\n  logged: false,\n  staff: false,\n} : jwt_decode(localStorage.getItem('token')).staff===true ?\n  {\n    userName: jwt_decode(localStorage.getItem('token')).username,\n    email: jwt_decode(localStorage.getItem('token')).email,\n    userFirstName:jwt_decode(localStorage.getItem('token')).firstName,\n    userLastName:jwt_decode(localStorage.getItem('token')).lastName,\n    staff: true,\n    token: localStorage.getItem('token'),\n    logged: true, \n    \n  }:\n  {\n    userName: jwt_decode(localStorage.getItem('token')).username,\n    email: jwt_decode(localStorage.getItem('token')).email,\n    userFirstName:jwt_decode(localStorage.getItem('token')).firstName,\n    userLastName:jwt_decode(localStorage.getItem('token')).lastName,\n    staff: false,\n    token: localStorage.getItem('token'),\n    logged: true, \n    \n  };\n  \n\n\n// simple async method(component can call it)\n// async (1)\nexport const signInAsync = createAsyncThunk(\n  'login/signIn',\n  async (action) => {\n    const response = await signIn(action);\n    // console.log(state.token)\n    return response.data;\n  }\n);\n\nexport const signUpAsync = createAsyncThunk(\n  'login/signUp',\n  async (cred) => {\n    // console.log(cred)\n    const response = await signUp(cred);\n    return response.data;\n  }\n);\nexport const signUpClientAsync = createAsyncThunk(\n  'login/signUpClient',\n  async (cred) => {\n    // console.log(cred)\n    const response = await signUpClient(cred);\n    return response.data;\n  }\n);\n\nexport const LoginSlice = createSlice({\n\n  name: 'login',\n  initialState,\n  reducers: {\n    signOut: (state) => {\n      state.token = \"\";\n      state.logged = false;\n      state.staff=false\n      state.userName = \"\"\n      state.email = \"\"\n\n      localStorage.removeItem('token')\n    },\n  },\n\n  //   useEffect(() => {\n  //     const storedToken = localStorage.getItem(\"token\");\n  //     if (storedToken !== null) {\n  //         setMyToken(storedToken)\n\n  //     };\n  // }, []);\n  // happens when async is done - callback\n  // async (3)\n\n  extraReducers: (builder) => {\n    builder\n      .addCase(signInAsync.fulfilled, (state, action) => {\n        if (action.payload.access) {\n          state.token = action.payload.access;\n          state.logged = true;\n          state.userName = jwt_decode(action.payload.access).username;\n          state.userFirstName = jwt_decode(action.payload.access).firstName;\n          state.userLastName=jwt_decode(action.payload.access).lastName;\n          state.email = jwt_decode(action.payload.access).email;\n          state.staff = jwt_decode(action.payload.access).staff;\n          localStorage.setItem('token', JSON.stringify(state.token))\n        }\n      })\n      .addCase(signUpAsync.fulfilled, (state, action) => {\n      })\n      .addCase(signUpClientAsync.fulfilled, (state, action) => {\n\n      });\n  },\n});\n\n// export of sync methods only\nexport const { signOut } = LoginSlice.actions;\n// export of any part of the state\n\nexport const selectLogged = (state) => state.login.logged;\nexport const selectEmail = (state) => state.login.email;\nexport const selectUserName = (state) => state.login.userName;\nexport const selectUserFirstName = (state) => state.login.userFirstName;\nexport const selectUserLastName = (state) => state.login.userLastName;\nexport const selectToken = (state) => state.login.token;\nexport const selectStaff = (state) => state.login.staff;\n// export reducer to the application\nexport default LoginSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}